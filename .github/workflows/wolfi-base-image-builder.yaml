name: Call this function to build Wolfi base Images and Push to the repo

on:
  workflow_call:
    inputs:
      file-path:
        type: string
        required: true
        description: The file path containing the image specs
      file-name:
        type: string
        required: true
        description: Name of the file for building the image
      base-image-name:
        type: string
        required: true
        description: Name of the file for building the image
      repo-name:
        type: string
        required: true
        description: Repository where the artifactory will be pushed
jobs:
    wolfi-base:
        
      runs-on: ubuntu-latest
      
      env:         
        base-image-tag: one
        output-file: vulnerabilities-wolfi-py3-10
        
      steps:
        - name: Checkout Code
          uses: actions/checkout@v4

        - name: Get APKO image builder
          run: docker pull cgr.dev/chainguard/apko

        - name: Build Wolfi Base image
          working-directory: ${{ inputs.file-path }}
          run: | 
            # echo "TAR_FILE=${{ inputs.base-image-name }}.tar" >> $GITHUB_ENV
            TAR_FILE=${{ inputs.base-image-name }}.tar
            docker run --rm -v ${PWD}:/work -w /work cgr.dev/chainguard/apko build ${{ inputs.file-name }} ${{ inputs.base-image-name }}:${{ env.base-image-tag }} $TAR_FILE
            docker load < $TAR_FILE
            # docker load < ${{ env.TAR_FILE }}
        
        - name: Generate Vulnerability Report
          run: |
            # mounting docker.sock needs to be explored
            docker run --rm -v /var/run/docker.sock:/var/run/docker.sock -v $HOME/Library/Caches:/root/.cache/ aquasec/trivy image ${{ inputs.base-image-name }}:${{ env.base-image-tag }}-amd64 > ${{ env.output-file }}
            cat ${{ env.output-file }}

        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}
        
        - name: Push the image to Dockerhub
          run: |
            # Tag the image
            docker tag ${{ inputs.base-image-name }}:${{ env.base-image-tag }}-amd64 ${{ secrets.DOCKERHUB_USERNAME }}/${{ inputs.repo-name }}:${{ inputs.base-image-name }}
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ inputs.repo-name }}:${{ inputs.base-image-name }}
